swagger: "2.0"
info:
  description: "
    
Тобі потрібно реалізувати сервіс з АРІ, який дозволить: 

- дізнатись поточний курс біткоіну (BTC) у гривні (UAH)

- підписати емейл на отримання інформації по зміні курсу

- запит, який відправить всім підписаним користувачам актуальний курс. 


Додаткові вимоги:

1. Сервіс має відповідати описаному ниже АРІ. <i>NB Закривати рішення аутентифікацією не потрібно</i>. 

2. Всі данні, для роботи додатку повинні зберігатися в файлах (підключати базу данних не потрібно). Тобто, потрібно реалізувати збереження та роботу з даними (наприклад, електронними адресами) через файлову систему.

3. В репозиторії повинен бути Dockerfile, який дозволяє запустити систему в Docker. З матеріалом по Docker вам необхідно ознайомитись самостійно.

4. Також ти можеш додавати коментарі чи опис логіки виконання роботи в README.md документі. Правильна логіка може стати перевагою при оцінюванні, якщо ти не повністю виконаєш завдання.


Очікувані мови виконання завдання: PHP, Go. 
Виконувати завдання іншими мовами можна, проте, це не буде перевагою.

Виконане завдання необхідно завантажити на GitHub (публічний репозиторій) та сабмітнути виконане завдання в гугл-форму.


Ти можеш користуватися усією доступною інформацією, але виконуй завдання самостійно. 

Успіхів!
"
  version: "1.0.0"
  title: "GSES2 BTC application"
host: "gses2.app"
basePath: "/api"
tags:
- name: "rate"
  description: "Отримання поточного курсу BTC до UAH"
- name: "subscription"
  description: "Робота з підпискою"
schemes:
- "http"
paths:
  /rate:
    get:
      tags:
      - "rate"
      summary: "Отримати поточний курс BTC до UAH"
      description: "Запит має повертати поточний курс BTC до UAH використовуючи будь-який third party сервіс з публічним АРІ"
      operationId: "rate"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Повертається актуальний курс BTC до UAH"
          schema:
            type: "number"
        "400":
          description: "Invalid status value"
  /subscribe:
    post:
      tags:
      - "subscription"
      summary: "Підписати емейл на отримання поточного курсу"
      description: "Запит має перевірити, чи немає данної електронної адреси в поточній базі даних (файловій) і, в разі її відсутності, записувати її. Пізніше, за допомогою іншого запиту ми будемо відправляти лист на ті електронні адреси, які будуть в цій базі. "
      operationId: "subscribe"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "email"
        in: "formData"
        description: "Електронна адреса, яку потрібно підписати"
        required: true
        type: "string"
      responses:
        "200":
          description: "E-mail додано"
        "409":
          description: "Повертати, якщо e-mail вже є в базі даних (файловій)"
  /sendEmails:
    post:
      tags:
      - "subscription"
      summary: "Відправити e-mail з поточним курсом на всі підписані електронні пошти."
      description: "Запит має отримувати актуальний курс BTC до UAH за допомогою third-party сервісу та відправляти його на всі електронні адреси, які були підписані раніше.  "
      operationId: "sendEmails"
      produces:
      - "application/json"
      responses:
        "200":
          description: "E-mailʼи відправлено"
